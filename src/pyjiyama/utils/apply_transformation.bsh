
import fr.cirad.image.fijiyama.*;
import fr.cirad.image.common.*;
import fr.cirad.image.registration.*;
import io.github.rocsg.fijiyama.registration.ItkTransform;
import ij.IJ;
import ij.ImagePlus;
import ij.process.ImageProcessor;


String home = new String(System.getProperty("user.home"));

// Specify the path to the text file
String filePath = home+"/tmp.txt";

// Create a new File object using the file path
File file = new File(filePath);

// Create a new BufferedReader to read the text file
BufferedReader reader = new BufferedReader(new FileReader(file));

// Read the contents of the text file into a StringBuilder object
StringBuilder sb = new StringBuilder();
String line;
while ((line = reader.readLine()) != null) {
    sb.append(line).append("\n");
}

// Close the reader
reader.close();

// Convert the StringBuilder object to a String
String text = sb.toString();

String[] paths = text.split("\n");

// Print the contents of the text file

String path_beanshell = paths[0];
String path_trans_emb_global = paths[1];
String path_movies = paths[2];
String path_movies_reg = paths[3];

addClassPath(path_beanshell);


pathtoimgs=path_movies;
pathtosaveimgs=path_movies_reg;

// Define folder with embryo transforms
File embryo_trans_folder = new File(path_trans_emb_global);
File[] embryo_trans = embryo_trans_folder.listFiles();

// Define folder with embryo images
File embryo_imgs_folder = new File(pathtoimgs);
File[] embryo_imgs = embryo_imgs_folder.listFiles();

// Select reference image
String imgrefpath = embryo_imgs_folder.getAbsolutePath()+"/t1.tif";

// Loop over each transform to be applied
for (int t = 1 ; t < embryo_trans.length+1; t ++) {
	String imgname = "t"+t+".tif";
	String imgpath = embryo_imgs_folder.getAbsolutePath()+"/"+imgname;
	transpath="";
	for (int q = 0 ; q < embryo_trans.length; q ++) {
		String transname=embryo_trans[q].getName();
		if (transname.endsWith("t"+t+".txt")) {
			transpath = embryo_trans[q].getAbsolutePath();
		}
	}
	//Here, you should provide paths of the files involved
	String pathToTheImageToBeTransformed=imgpath;
	String pathToTheReferenceImage=imgrefpath;
	String pathToTheTransformation=transpath;
	String pathToSaveTheResult=pathtosaveimgs+imgname;
	
	//Actually open these files and check if it went ok
	ImagePlus imgMov=IJ.openImage(pathToTheImageToBeTransformed);
	ImagePlus imgRef=IJ.openImage(pathToTheReferenceImage);
	ItkTransform tr=ItkTransform.readTransformFromFile(pathToTheTransformation);

	if(tr==null) {IJ.showMessage("No transform given. Abort. You should check the path");return;}
	if(imgMov==null) {IJ.showMessage("Moving image does not exist. Abort. You should check the path");return;}
	if(imgRef==null) {IJ.showMessage("Reference image does not exist. Abort. You should check the path");return;}

	//Do the thing
	ImagePlus result=tr.transformImage(imgRef, imgMov, false);
	//Some cuteness considerations about colormaps and title
	//result.setTitle("Transformed image");
	ImageProcessor ip=imgMov.getStack().getProcessor(imgMov.getNSlices()/2+1);
	ip.resetMinAndMax();
	double rangeMin=ip.getMin();
	double rangeMax=ip.getMax();
	result.setDisplayRange(rangeMin,rangeMax);
	//Save the result
	IJ.saveAsTiff(result, pathToSaveTheResult);
	//If necessary to set a LUT to the output file, do
	//IJ.run(result,"Fire","")

	//Show the result. You should uncomment this line below after testing time if you don't want to mess up with incoming images everywhere when you will batch-process
	//result.show();
}

